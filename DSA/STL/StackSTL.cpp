#include<bits/stdc++.h>
using namespace std;
int main() {
    stack<int> st;
    st.push(1);         // {1}
    st.push(2);         // {2, 1}
    st.push(3);         // {3, 2, 1}
    st.push(3);         // {3, 3, 2, 1}
    st.push(5);         // {5, 3, 3, 2, 1}

    cout << st.top() << endl;   // 5... "st[i] is invalid" / Indexing is not allowed...
    st.pop();                   // {3, 3, 2, 1}
    cout << st.top() << endl;   // 3...

    cout << st.size() << endl;  // 4...
    cout << st.empty() << endl; // 0 (because Stack is not empty)...

    // Swaping Stack...
    stack<int> st1;
    st1.swap(st);               // Swaping St1 with St...
    cout << st1.top() << endl;
    cout << st.empty() << endl; // Because st is now empty...
}

// Stack maintains LIFO (Last In First Out)...